// <auto-generated />
using System;
using HomeServeHub.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeServeHub.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomeServeHub.Models.TbAppointment", b =>
                {
                    b.Property<int>("AppointmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentID"));

                    b.Property<int>("AppointmentCurrentState")
                        .HasColumnType("int");

                    b.Property<DateTime>("AppointmentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("AppointmentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceID")
                        .HasColumnType("int");

                    b.Property<int>("ServiceProviderID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("AppointmentID");

                    b.HasIndex("ServiceID");

                    b.HasIndex("ServiceProviderID");

                    b.HasIndex("UserID");

                    b.ToTable("TbAppointments", (string)null);
                });

            modelBuilder.Entity("HomeServeHub.Models.TbPaymentDetail", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentID"));

                    b.Property<int>("AppointmentID")
                        .HasColumnType("int");

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PaymentCurrentState")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PaymentID");

                    b.HasIndex("AppointmentID");

                    b.HasIndex("UserID");

                    b.ToTable("TbPaymentDetails", (string)null);
                });

            modelBuilder.Entity("HomeServeHub.Models.TbService", b =>
                {
                    b.Property<int>("ServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceID"));

                    b.Property<decimal>("ServiceCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ServiceCurrentState")
                        .HasColumnType("int");

                    b.Property<string>("ServiceDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ServiceProviderID")
                        .HasColumnType("int");

                    b.HasKey("ServiceID");

                    b.HasIndex("ServiceProviderID");

                    b.ToTable("TbServices", (string)null);
                });

            modelBuilder.Entity("HomeServeHub.Models.TbServiceProvider", b =>
                {
                    b.Property<int>("ServiceProviderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceProviderID"));

                    b.Property<string>("ServiceProviderAvailability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceProviderCurrentState")
                        .HasColumnType("int");

                    b.Property<DateTime>("ServiceProviderEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ServiceProviderStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceProviderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ServiceProviderID");

                    b.HasIndex("UserID");

                    b.ToTable("TbServiceProviders", (string)null);
                });

            modelBuilder.Entity("HomeServeHub.Models.TbUser", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserCurrentState")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.ToTable("TbUsers", (string)null);
                });

            modelBuilder.Entity("HomeServeHub.Models.TbUserType", b =>
                {
                    b.Property<int>("UserTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserTypeID"));

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("UserTypeCurrentState")
                        .HasColumnType("int");

                    b.Property<string>("UserTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserTypeID");

                    b.HasIndex("UserID");

                    b.ToTable("TbUserTypes", (string)null);
                });

            modelBuilder.Entity("HomeServeHub.Models.TbAppointment", b =>
                {
                    b.HasOne("HomeServeHub.Models.TbService", "Service")
                        .WithMany("Appointment")
                        .HasForeignKey("ServiceID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HomeServeHub.Models.TbServiceProvider", "ServiceProvider")
                        .WithMany("Appointment")
                        .HasForeignKey("ServiceProviderID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HomeServeHub.Models.TbUser", "User")
                        .WithMany("Appointment")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("ServiceProvider");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeServeHub.Models.TbPaymentDetail", b =>
                {
                    b.HasOne("HomeServeHub.Models.TbAppointment", "Appointment")
                        .WithMany("PaymentDetail")
                        .HasForeignKey("AppointmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("HomeServeHub.Models.TbUser", "User")
                        .WithMany("PaymentDetail")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeServeHub.Models.TbService", b =>
                {
                    b.HasOne("HomeServeHub.Models.TbServiceProvider", "ServiceProvider")
                        .WithMany()
                        .HasForeignKey("ServiceProviderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceProvider");
                });

            modelBuilder.Entity("HomeServeHub.Models.TbServiceProvider", b =>
                {
                    b.HasOne("HomeServeHub.Models.TbUser", "User")
                        .WithMany("ServiceProvider")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeServeHub.Models.TbUserType", b =>
                {
                    b.HasOne("HomeServeHub.Models.TbUser", "User")
                        .WithMany("UserType")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HomeServeHub.Models.TbAppointment", b =>
                {
                    b.Navigation("PaymentDetail");
                });

            modelBuilder.Entity("HomeServeHub.Models.TbService", b =>
                {
                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("HomeServeHub.Models.TbServiceProvider", b =>
                {
                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("HomeServeHub.Models.TbUser", b =>
                {
                    b.Navigation("Appointment");

                    b.Navigation("PaymentDetail");

                    b.Navigation("ServiceProvider");

                    b.Navigation("UserType");
                });
#pragma warning restore 612, 618
        }
    }
}
